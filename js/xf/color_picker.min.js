((m,h)=>{XF.Color=XF.create({hue:null,saturation:null,light:null,alpha:null,__construct({hue:b,saturation:a,light:c,alpha:d=1}){b=Math.round(b)%360;0>b&&(b+=360);this.hue=b;this.saturation=XF.Color.clamp(a);this.light=XF.Color.clamp(c);this.alpha=XF.Color.clamp(100*d)/100},set(b){return new XF.Color({...this,...b})},toCss(){let b;b="hsl("+`${this.hue}, ${this.saturation}%, ${this.light}%`;1!==this.alpha&&(b+=`, ${this.alpha}`);return b+")"},toRgb(){const b=this.hue,a=this.saturation/100,c=this.light/
100,d=this.alpha,e=l=>{l=(l+b/30)%12;return c-a*Math.min(c,1-c)*Math.max(-1,Math.min(1,l-3,9-l))};let [f,g,k]=[e(0),e(8),e(4)];f=Math.round(255*f);g=Math.round(255*g);k=Math.round(255*k);return{red:f,green:g,blue:k,alpha:d}},toHsv(){const b=this.hue;let a=this.saturation/100;const c=this.light/100,d=this.alpha;let e=c+a*Math.min(c,1-c);a=Math.round(100*(0===e?0:2*(1-c/e)));e=Math.round(100*e);return{hue:b,saturation:a,value:e,alpha:d}}});XF.Color.palette={};XF.Color.paletteParsed={};XF.Color.fromValue=
(b,a="default")=>{b=b.trim();var c=b.match(/^([\w-]+)\((.+)\)$/);if(c){let f=c[1];c=c[2].split(/(?<=\))\s*,\s*/).map(g=>g.includes(")")?g:g.split(",").map(k=>k.trim())).flat();if("xf-diminish"===f||"xf-intensify"===f){let g,k;f="light"===(null!=(k=null==(g=XF.Color.palette[a])?void 0:g.styleType)?k:"light")?"xf-diminish"===f?"lighten":"darken":"xf-diminish"===f?"darken":"lighten"}switch(f){case "saturate":return a=XF.Color.fromValue(c[0],a),c=parseInt(c[1]),XF.Color.isValidFunctionArgument(a,c)?a.set({saturation:a.saturation+
c}):null;case "desaturate":return a=XF.Color.fromValue(c[0],a),c=parseInt(c[1]),XF.Color.isValidFunctionArgument(a,c)?a.set({saturation:a.saturation-c}):null;case "lighten":return a=XF.Color.fromValue(c[0],a),c=parseInt(c[1]),XF.Color.isValidFunctionArgument(a,c)?a.set({light:a.light+c}):null;case "darken":return a=XF.Color.fromValue(c[0],a),c=parseInt(c[1]),XF.Color.isValidFunctionArgument(a,c)?a.set({light:a.light-c}):null;case "fadein":return a=XF.Color.fromValue(c[0],a),c=parseInt(c[1]),XF.Color.isValidFunctionArgument(a,
c)?a.set({alpha:a.alpha+c}):null;case "fadeout":return a=XF.Color.fromValue(c[0],a),c=parseInt(c[1]),XF.Color.isValidFunctionArgument(a,c)?a.set({alpha:a.alpha-c}):null;case "fade":return a=XF.Color.fromValue(c[0],a),c=parseInt(c[1]),XF.Color.isValidFunctionArgument(a,c)?a.set({alpha:c}):null;case "spin":return a=XF.Color.fromValue(c[0],a),c=parseInt(c[1]),XF.Color.isValidFunctionArgument(a,c)?a.set({hue:a.hue+c}):null;case "mix":var d=XF.Color.fromValue(c[0],a);a=XF.Color.fromValue(c[1],a);var e;
c=parseInt(null!=(e=c[2])?e:50)/100;e=1-c;return XF.Color.isValidFunctionArgument(d,a,c,e)?new XF.Color({hue:d.hue*c+a.hue*e,saturation:d.saturation*c+a.saturation*e,light:d.light*c+a.light*e,alpha:d.alpha*c+a.alpha*e}):null;case "tint":a=XF.Color.fromValue(c[0],a);let g;c=parseInt(null!=(g=c[1])?g:50)/100;if(!XF.Color.isValidFunctionArgument(a,c))return null;e=1-c;return a.set({saturation:a.saturation*e,light:100*c+a.light*e});case "shade":a=XF.Color.fromValue(c[0],a);let k;c=parseInt(null!=(k=c[1])?
k:50)/100;return XF.Color.isValidFunctionArgument(a,c)?a.set({light:a.light*(1-c)}):null;case "greyscale":return c=XF.Color.fromValue(c[0],a),XF.Color.isValidFunctionArgument(c)?c.set({saturation:0}):null;case "contrast":a=XF.Color.fromValue(c[0],a);let l;c=parseInt(null!=(l=c[3])?l:67);if(!XF.Color.isValidFunctionArgument(a,c))return null;c=-100*(a.light-c);return null!=(d=null==a?void 0:a.set({light:c}))?d:null}}return b.startsWith("@")?(c=b,void 0===XF.Color.paletteParsed[a]&&(XF.Color.paletteParsed[a]=
{}),void 0===XF.Color.paletteParsed[a][c]&&(XF.Color.paletteParsed[a][c]=null,e=(e=XF.Color.getPaletteValue(a,c))?XF.Color.fromValue(e,a):null,XF.Color.paletteParsed[a][c]=e),XF.Color.paletteParsed[a][c]):XF.Color.fromColor(b)};XF.Color.fromColor=b=>{if(!b)return null;var a=b.match(/^hsl\((\d+), (\d+)%, (\d+)%(, ([\d.]+))?\)$/i);if(a){b=parseInt(a[1]);var c=parseInt(a[2]),d=parseInt(a[3]);a=a[5]?parseFloat(a[5]):1;return new XF.Color({hue:b,saturation:c,light:d,alpha:a})}a=h.createElement("div");
a.style.color=b;if(!a.style.color)return null;h.body.append(a);b=m.getComputedStyle(a).color;a.remove();d=b.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(,\s*([\d.]+))?\)$/i);if(!d)return null;a=parseInt(d[1]);b=parseInt(d[2]);c=parseInt(d[3]);d=d[5]?parseFloat(d[5]):1;return XF.Color.fromRgb({red:a,green:b,blue:c,alpha:d})};XF.Color.fromRgb=({red:b,green:a,blue:c,alpha:d=1})=>{b=XF.Color.clamp(b,0,255);a=XF.Color.clamp(a,0,255);c=XF.Color.clamp(c,0,255);d=XF.Color.clamp(100*d)/100;b/=255;a/=255;c/=255;
const e=Math.max(b,a,c);var f=Math.min(b,a,c);const g=e-f;f=(e+f)/2;let k;if(0===g)k=0;else switch(e){case b:k=(a-c)/g%6*60;break;case a:k=60*((c-b)/g+2);break;case c:k=60*((b-a)/g+4)}return new XF.Color({hue:k,saturation:100*(0===f||1===f?0:(e-f)/Math.min(f,1-f)),light:100*f,alpha:d})};XF.Color.fromHsv=({hue:b,saturation:a,value:c,alpha:d=1})=>{b=Math.round(b)%360;0>b&&(b+=360);a=XF.Color.clamp(a);c=XF.Color.clamp(c);d=XF.Color.clamp(100*d)/100;c/=100;let e=c*(1-a/100/2);a=0===e||1===e?0:(c-e)/Math.min(e,
1-e);return new XF.Color({hue:b,saturation:100*a,light:100*e,alpha:d})};XF.Color.getPaletteValue=(b,a)=>{b=XF.Color.palette[b];if(!b)return null;for(const c of Object.values(b.groups))for(const [d,e]of Object.entries(c.colors))if(d===a)return e.value;return null};XF.Color.isValidFunctionArgument=(...b)=>{for(const a of b)if(!(a instanceof XF.Color||Number.isFinite(a)))return!1;return!0};XF.Color.clamp=(b,a=0,c=100)=>Math.max(a,Math.min(c,Math.round(b)));XF.MultiColor=XF.create({value:null,variation:null,
colors:null,__construct(b,a=null){this.value=b;this.variation=a;const c={};a=a?[a]:Object.keys(XF.Color.palette);for(const d of a)c[d]=XF.Color.fromValue(b,d);this.colors=c},primary(b=!1){const a=this.variation?this.colors[this.variation]:this.colors.default;return!a&&b?XF.Color.fromValue("transparent"):a},className(){return Object.values(this.colors).every(b=>null===b)?"is-unknown":"is-active"},toCss(){const b=Object.keys(this.colors).length;if(1===b){var a,c;return null!=(c=null==(a=this.primary())?
void 0:a.toCss())?c:"transparent"}a=[];for(const [d,e]of Object.values(this.colors).entries()){c=Math.round(d/b*100);const f=Math.round((d+1)/b*100);let g,k;const l=null!=(k=null==(g=e)?void 0:g.toCss())?k:"transparent";a.push(`${l} ${c}%`);a.push(`${l} ${f}%`)}return`linear-gradient(to bottom right, ${a.join(", ")})`}});XF.ColorPicker=XF.Element.newHandler({options:{input:"| .input",box:"| .js-colorPickerTrigger",allowPalette:!0,paletteVariation:null,paletteName:null},input:null,box:null,hslTxtEls:null,
menu:null,menuEls:{},inputColors:null,menuColors:null,allowReparse:!0,init(){this.input=XF.findRelativeIf(this.options.input,this.target);this.box=XF.findRelativeIf(this.options.box,this.target);this.hslTxtEls={h:this.target.querySelector(".js-hslTxt-h"),s:this.target.querySelector(".js-hslTxt-s"),l:this.target.querySelector(".js-hslTxt-l")};this.box.append(XF.createElementFromString('<span class="color-sample"></span>'));XF.on(h,"color-picker:reparse",this.reparse.bind(this));XF.on(this.input,"input",
this.inputChange.bind(this));XF.on(this.box,"click",this.boxClick.bind(this));this.updateInputColor()},reparse(){this.allowReparse&&(this.updateInputColor(),this.destroyMenu())},inputChange(){this.updateInputColor(!0)},boxClick(b){if(this.input.disabled){let a;null==(a=this.menu)||a.close()}else{this.createMenu();if(!this.menu.isOpen())this.onMenuOpen();this.menu.click(b)}},createMenu(){if(!this.menu){var b=this.getMenuElement();this.box.after(b);XF.activate(b);this.menu=new XF.MenuClick(this.box,
{});this.menuEls={palette:b.querySelectorAll(".colorPicker-palette"),gradientGrid:b.querySelector(".colorPicker-sliders-gradient-grid"),gradientIndicator:b.querySelector(".colorPicker-sliders-gradient-indicator"),hueBar:b.querySelector(".colorPicker-sliders-hue-bar"),hueIndicator:b.querySelector(".colorPicker-sliders-hue-indicator"),alphaBar:b.querySelector(".colorPicker-sliders-alpha-bar"),alphaIndicator:b.querySelector(".colorPicker-sliders-alpha-indicator"),previewOriginal:b.querySelector(".colorPicker-preview-original"),
previewCurrent:b.querySelector(".colorPicker-preview-current"),input:b.querySelector(".colorPicker-input"),reset:b.querySelector(".colorPicker-reset"),save:b.querySelector(".colorPicker-save")};this.menuEls.palette.forEach(a=>{XF.onDelegated(a,"click",".colorPicker-palette-color",this.paletteClick.bind(this))});XF.on(this.menuEls.gradientGrid,"mousedown",this.gradientGridMouseDown.bind(this));XF.on(this.menuEls.hueBar,"mousedown",this.hueBarMouseDown.bind(this));XF.on(this.menuEls.alphaBar,"mousedown",
this.alphaBarMouseDown.bind(this));XF.on(this.menuEls.input,"input",this.menuInputChange.bind(this));XF.on(this.menuEls.reset,"click",this.menuResetClick.bind(this));XF.on(this.menuEls.save,"click",this.menuSaveClick.bind(this))}},getMenuElement(){var b=this.getMenuPalette();const a=h.querySelector("#xfColorPickerMenuTemplate").innerHTML;b=Mustache.render(a,{palette:b}).trim();return XF.createElementFromString(b)},getMenuPalette(){if(!this.options.allowPalette)return[];const b=[];var a=XF.Color.palette.default.groups;
for(const [d,e]of Object.entries(a)){a=[];for(const [f,g]of Object.entries(e.colors)){if(this.options.paletteName&&this.options.paletteName===f)continue;var c=new XF.MultiColor(f,this.options.paletteVariation);const k=c.className();c=c.toCss();a.push({name:f,title:g.title,className:k,background:c})}b.push({name:d,title:e.title,colors:a})}return b},onMenuOpen(){this.menuEls.input.value=this.input.value;this.updateMenuColor();this.menuEls.previewOriginal.style.background=this.inputColors.toCss()},destroyMenu(){if(this.menu){var b;
null==(b=this.menu)||b.close();this.menu=null;this.menuEls={};this.menuColors=null}},paletteClick(b){b.preventDefault();b=b.target.closest(".colorPicker-palette-color");this.menuEls.input.value=b.dataset.name;this.updateMenuColor()},gradientGridMouseDown(b){XF.MenuWatcher.preventDocClick();h.body.style.cursor="all-scroll";XF.on(h,"mousemove.colorpicker",a=>this.gradientGridMouseAction(a));this.gradientGridMouseAction(b);XF.on(h,"mouseup.colorpicker",()=>{XF.off(h,".colorpicker");h.body.style.cursor=
"";setTimeout(XF.MenuWatcher.allowDocClick,0)})},gradientGridMouseAction(b){b.preventDefault();const a=this.menuEls.gradientGrid.getBoundingClientRect(),c=XF.Color.clamp(100*(b.clientX-a.left)/this.menuEls.gradientGrid.offsetWidth);b=100-XF.Color.clamp(100*(b.clientY-a.top)/this.menuEls.gradientGrid.offsetHeight);this.menuEls.input.value=XF.Color.fromHsv({...this.menuColors.primary(!0).toHsv(),saturation:c,value:b}).toCss();this.updateMenuColor()},hueBarMouseDown(b){XF.MenuWatcher.preventDocClick();
h.body.style.cursor="ew-resize";XF.on(h,"mousemove.colorpicker",a=>this.hueBarMouseAction(a));this.hueBarMouseAction(b);XF.on(h,"mouseup.colorpicker",()=>{XF.off(h,".colorpicker");h.body.style.cursor="";setTimeout(XF.MenuWatcher.allowDocClick,0)})},hueBarMouseAction(b){b.preventDefault();const a=this.menuEls.hueBar.getBoundingClientRect();b=359-359*XF.Color.clamp(100*(b.clientX-a.left)/this.menuEls.hueBar.offsetWidth)/100;this.menuEls.input.value=this.menuColors.primary(!0).set({hue:b}).toCss();this.updateMenuColor()},
alphaBarMouseDown(b){XF.MenuWatcher.preventDocClick();h.body.style.cursor="ew-resize";XF.on(h,"mousemove.colorpicker",a=>this.alphaBarMouseAction(a));this.alphaBarMouseAction(b);XF.on(h,"mouseup.colorpicker",()=>{XF.off(h,".colorpicker");h.body.style.cursor="";setTimeout(XF.MenuWatcher.allowDocClick,0)})},alphaBarMouseAction(b){b.preventDefault();const a=this.menuEls.alphaBar.getBoundingClientRect();b=XF.Color.clamp(100*(b.clientX-a.left)/this.menuEls.alphaBar.offsetWidth)/100;this.menuEls.input.value=
this.menuColors.primary(!0).set({alpha:b}).toCss();this.updateMenuColor()},menuInputChange(){this.updateMenuColor()},menuResetClick(){this.menuEls.input.value=this.input.value;this.updateMenuColor()},menuSaveClick(){let b;null==(b=this.menu)||b.close();this.input.value=this.menuEls.input.value;this.updateInputColor(!0)},updateMenuColor(){this.menuColors=new XF.MultiColor(this.menuEls.input.value,this.options.paletteVariation);this.updatePaletteSelections();this.updatePickerSelections();this.menuEls.previewCurrent.style.background=
this.menuColors.toCss()},updatePaletteSelections(){for(const b of this.menuEls.palette)for(const a of b.querySelectorAll(".colorPicker-palette-color"))this.menuEls.input.value.trim()===a.dataset.name?a.classList.add("is-active"):a.classList.remove("is-active")},updatePickerSelections(){const b=this.menuColors.primary(!0),a=b.set({alpha:0}),c=b.set({alpha:1});var d=b.toHsv();const e=c.set({saturation:100,light:50}),f=d.saturation+"%";d=100-d.value+"%";this.menuEls.gradientGrid.style.background=e.toCss();
this.menuEls.gradientIndicator.style.left=f;this.menuEls.gradientIndicator.style.top=d;this.menuEls.gradientIndicator.style.background=c.toCss();this.menuEls.hueIndicator.style.left=(359-b.hue)/359*100+"%";this.menuEls.alphaIndicator.style.left=100*b.alpha+"%";this.menuEls.alphaBar.style.background=`linear-gradient(
				to right,
				${a.toCss()},
				${c.toCss()})`},updateInputColor(b=!1){this.inputColors=new XF.MultiColor(this.input.value,this.options.paletteVariation);this.updateBox();this.updateHslTxt();b&&this.updatePalette(this.input.value)},updateBox(){this.box.classList.remove("is-active","is-unknown");this.input.value&&this.box.classList.add(this.inputColors.className());this.box.querySelector(".color-sample").style.background=this.inputColors.toCss()},updateHslTxt(){if(this.hslTxtEls.h){var b=this.inputColors.primary();b?(this.hslTxtEls.h.textContent=
b.hue,this.hslTxtEls.s.textContent=b.saturation+"%",this.hslTxtEls.l.textContent=b.light+"%"):(this.hslTxtEls.h.textContent="",this.hslTxtEls.s.textContent="",this.hslTxtEls.l.textContent="")}},updatePalette(b){const a=this.options.paletteVariation,c=this.options.paletteName;if(a&&c&&XF.Color.palette[a]){for(const d of Object.keys(XF.Color.palette[a].groups))void 0!==XF.Color.palette[a].groups[d].colors[c]&&(XF.Color.palette[a].groups[d].colors[c].value=b);this.allowReparse=!1;XF.Color.paletteParsed=
{};XF.trigger(h,"color-picker:reparse");this.destroyMenu();this.allowReparse=!0}}});XF.Element.register("color-picker","XF.ColorPicker");XF.on(h,"DOMContentLoaded",()=>{var b;const a=null==(b=h.querySelector(".js-colorPickerData"))?void 0:b.innerHTML;a&&(b=JSON.parse(a))&&(XF.Color.palette={...XF.Color.palette,...b},XF.Color.paletteParsed={})})})(window,document);
