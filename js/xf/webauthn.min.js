((h,k)=>{XF.WebAuthn=XF.Element.newHandler({options:{startButton:".js-webauthnStart",verifying:null,type:"create",rpName:"",rpId:location.hostname,userId:0,userName:"",userDisplayName:"",userVerification:"discouraged",residentKey:"preferred",existingCredentials:[],authAttachment:null,timeout:6E4,attestation:"none",autotrigger:!1,autosubmit:!1},target:null,form:null,challenge:null,init(){this.form=this.target.closest("form");this.challenge=this.form.querySelector('input[name="webauthn_challenge"]').value;
this.options.autotrigger&&this.initWebAuthn();let a=this.target.querySelector(this.options.startButton);a&&a.addEventListener("click",d=>{this.initWebAuthn()})},initWebAuthn(){"create"===this.options.type?this.typeCreate():"get"===this.options.type&&this.typeGet()},typeCreate(){let a=this.form.querySelector(".formSubmitRow button");a.classList.add("is-disabled");a.disabled=!0;XF.WebAuthnProcess.create({challenge:this.challenge,target:this.target,config:this.options,registerFn:this.registerCredentials.bind(this)})},
typeGet(){var a=this.form.querySelector(".formSubmitRow button");null!==a&&(a.classList.add("is-disabled"),a.disabled=!0);a=this.target;const d=this.options;d.allow=[];this.options.existingCredentials.forEach(b=>{d.allow.push({id:Uint8Array.from(atob(b),e=>e.charCodeAt(0)),type:"public-key"})});XF.WebAuthnProcess.get({challenge:this.challenge,target:a,config:d,registerFn:this.registerCredentials.bind(this)})},registerCredentials(a){this.form.querySelector('input[name="webauthn_payload"]').value=JSON.stringify(a);
a=this.form.querySelector(".formSubmitRow button");null!==a&&(a.classList.remove("is-disabled"),a.disabled=!1)}});XF.WebAuthnClick=XF.Event.newHandler({eventNameSpace:"XFWebAuthnClick",options:{rpName:"",rpId:location.hostname,userId:0,userName:"",userDisplayName:"",userVerification:"discouraged",residentKey:"preferred",existingCredentials:[],authAttachment:null,timeout:6E4,attestation:"none",autotrigger:!1,autosubmit:!1},processing:!1,challenge:null,init(){this.target.classList.add("is-disabled")},
click(a){a.preventDefault();this.processing||(this.processing=!0,this.initSetup())},initSetup(){const a=this.target;XF.ajax("get",this.target.href,({challenge:d,rpName:b,userId:e,userName:c,userDisplayName:f})=>{this.challenge=d;XF.WebAuthnProcess.create({challenge:d,target:a,config:{...this.options,rpName:b,userId:e,userName:c,userDisplayName:f},registerFn:this.registerCredentials.bind(this)})})},registerCredentials(a){XF.ajax("post",XF.canonicalizeUrl(("admin"===XF.getApp()?"admin.php?":"index.php?")+
"account/passkey/add"),{webauthn_payload:JSON.stringify(a),webauthn_challenge:this.challenge,user_verification:this.options.userVerification},this.onSuccess.bind(this),{skipDefaultSuccess:!0})},onSuccess(a){this.processing=!1;this.target.classList.remove("is-disabled");"ok"===a.status&&a.redirect?a.message?XF.flashMessage(a.message,1E3,()=>XF.redirect(a.redirect)):XF.redirect(a.redirect):XF.alert("Unexpected response")}});XF.WebAuthnProcess=(()=>({create:({challenge:a,target:d,config:b,registerFn:e})=>
{b.userId=b.userId.toString();a={publicKey:{challenge:Uint8Array.from(a,c=>c.charCodeAt(0)),rp:{name:b.rpName,id:b.rpId},user:{id:Uint8Array.from(b.userId,c=>c.charCodeAt(0)),name:b.userName,displayName:b.userDisplayName},pubKeyCredParams:[{alg:-7,type:"public-key"},{alg:-8,type:"public-key"},{alg:-257,type:"public-key"}],authenticatorSelection:{userVerification:b.userVerification,residentKey:b.residentKey},timeout:b.timeout,attestation:b.attestation}};b.authAttachment&&(a.publicKey.authenticatorSelection.authenticatorAttachment=
b.authAttachment);if(Array.isArray(b.existingCredentials)){let c=[];b.existingCredentials.forEach(function(f){c.push({id:Uint8Array.from(atob(f),g=>g.charCodeAt(0)),type:"public-key"})});a.publicKey.excludeCredentials=c}navigator.credentials.create(a).then(c=>{const f=c.response.attestationObject;e({clientDataJSON:c.response.clientDataJSON?btoa(String.fromCharCode(...(new Uint8Array(c.response.clientDataJSON)))):null,attestationObject:f?btoa(String.fromCharCode(...(new Uint8Array(f)))):null})}).then(()=>
{b.autosubmit&&setTimeout(()=>{const c=d.closest("form");XF.trigger(c,"submit")&&c.submit()},500)}).catch(console.error)},get:({challenge:a,target:d,config:b,registerFn:e})=>{a={publicKey:{challenge:Uint8Array.from(a,c=>c.charCodeAt(0)),allowCredentials:b.allow,userVerification:b.userVerification,timeout:b.timeout}};navigator.credentials.get(a).then(c=>{b.startButton&&(d.querySelector(b.startButton).classList.add("is-disabled"),d.querySelector(b.startButton).disabled=!0,d.querySelector(b.startButton).textContent=
b.verifying);e({id:btoa(String.fromCharCode(...(new Uint8Array(c.rawId)))),authenticatorData:c.response.authenticatorData?btoa(String.fromCharCode(...(new Uint8Array(c.response.authenticatorData)))):null,clientDataJSON:c.response.clientDataJSON?btoa(String.fromCharCode(...(new Uint8Array(c.response.clientDataJSON)))):null,signature:c.response.signature?btoa(String.fromCharCode(...(new Uint8Array(c.response.signature)))):null})}).then(()=>{b.autosubmit&&setTimeout(()=>{const c=d.closest("form");XF.trigger(c,
"submit")&&c.submit()},500)}).catch(console.error)}}))();XF.Element.register("webauthn","XF.WebAuthn");XF.Event.register("click","webauthn-click","XF.WebAuthnClick")})(window,document);
