((r,q)=>{XF.PermissionForm=XF.Element.newHandler({options:{form:null,filterInput:".js-permissionFilterInput",rows:".js-permission",rowLabel:".formRow-label",groups:".block-body",groupHeader:".block-formSectionHeader",headerCollapser:".collapseTrigger",quickSet:".js-permissionQuickSet",permissionType:null},form:null,groupEls:null,groups:{},filterEl:null,filterTimer:null,init(){let a=this.target;const b=this.options;b.form&&(a=XF.findRelativeIf(b.form,a));this.form=a;b.permissionType||console.error("No permission type specified. Must be global or content.");
const c=b.groupHeader,e=b.rows,h={};this.groupEls=a.querySelectorAll(b.groups);this.groupEls.forEach(f=>{const l=XF.uniqueId(f),n=parseInt(f.dataset.moderatorPermissions,10)?!0:!1;let m;for(var d=f.previousElementSibling;d;){if(d.matches(c)){m=d;break}d=d.previousElementSibling}d=f.querySelectorAll(e);h[l]={group:f,isModerator:n,header:m,rows:d}});this.groups=h;this.filterEl=XF.findRelativeIf(b.filterInput,a);XF.on(this.filterEl,"keyup",this.onKeyUp.bind(this));XF.on(this.filterEl,"keypress",this.onKeyPress.bind(this));
XF.on(this.filterEl,"paste",this.onPaste.bind(this));a.querySelectorAll(b.quickSet).forEach(f=>{XF.on(f,"click",()=>this.triggerQuickSet(f))});setTimeout(this.applyInitialState.bind(this),0)},applyInitialState(){const a=this.groups;let b,c,e,h;for(const f of Object.keys(a))b=a[f],c=b.header,e=b.group,h=!1,c&&b.isModerator&&(b.rows.forEach(l=>{if(this.isRowValueSet(l))return h=!0,!1}),this.setGroupExpandedState(e,c,h))},setGroupExpandedState(a,b,c){b.querySelector(this.options.headerCollapser).classList.toggle("is-active",
c);a.classList.toggle("is-active",c);XF.layoutChange()},getRowValue(a){a=XF.Serializer.serializeArray(a.querySelectorAll("input, select"));a=a[a.length-1].value;/^[0-9]+$/.test(a)&&(a=parseInt(a,10));return a},isValueSet(a){if("number"==typeof a)return 0!=a;switch(a){case "allow":case "content_allow":case "reset":case "deny":return!0;default:return!1}},isRowValueSet(a){return this.isValueSet(this.getRowValue(a))},onKeyUp(a){if(!a.ctrlKey&&!a.metaKey){switch(a.key){case "Tab":case "Enter":case "Shift":case "Control":case "Alt":break;
default:this.planFilter()}"Enter"!=a.key&&this.planFilter()}},onKeyPress(a){"Enter"==a.key&&(a.preventDefault(),this.filter())},onPaste(a){this.planFilter()},planFilter(){this.filterTimer&&clearTimeout(this.filterTimer);this.filterTimer=setTimeout(this.filter.bind(this),250)},filter(){this.filterTimer&&clearTimeout(this.filterTimer);var a=this.filterEl.value;let b,c;const e=this.groups,h=this.options.rowLabel;a.length?(b=new RegExp(`(${XF.regexQuote(a)})`,"i"),c=new RegExp(`(${XF.regexQuote(XF.htmlspecialchars(a))})`,
"i")):c=b=!1;let f=!1;for(const l of Object.keys(e)){let n=!1,m=!1;a=e[l];a.rows.forEach(d=>{d.querySelectorAll(".textHighlight").forEach(g=>{const k=g.parentNode;for(;g.firstChild;)k.insertBefore(g.firstChild,g);k.removeChild(g);k.normalize()})});a.rows.forEach(d=>{let g=!1;if(b){const p=d.querySelector(h);var k=p.textContent;b.test(k)&&(g=!0,k=XF.htmlspecialchars(k).replace(c,'<span class="textHighlight textHighlight--attention">$1</span>'),p.innerHTML=k)}else g=!0;XF.display(d,g?"":"none");g?n=
!0:f=m=!0});if(b&&!n)XF.display(a.group,"none"),XF.display(a.header,"none");else{XF.display(a.group);XF.display(a.header);const d=a.group.querySelector(".formRow--permissionQuickSet");d&&XF.display(d,m?"none":"");b&&this.setGroupExpandedState(a.group,a.header,!0)}}this.form.querySelector(".js-globalPermissionQuickSet").style.display=f?"none":"";XF.layoutChange()},triggerQuickSet(a){const b=a.dataset.value;a=a.dataset.target;let c=null;a&&a.length&&(c=q.querySelector(a));c||(c=this.form);c.querySelectorAll(this.options.rows).forEach(e=>
this.setRowValue(e,b))},setRowValue(a,b){if("flag"==a.dataset.permissionType)b=a.querySelector(`input[type=radio][value=${b}]`),b.checked=!0,XF.trigger(b,XF.customEvent("click",{triggered:!0}));else{const c="allow"==b||"content_allow"==b?-1:0;a.querySelectorAll("input[type=radio]").forEach(e=>{parseInt(e.value,10)==c&&(e.checked=!0,XF.trigger(e,XF.customEvent("click",{triggered:!0})),e.dataset.xfInit&&(a.querySelector("input[type=text], input[type=number]").value=c))})}}});XF.PermissionChoice=XF.Element.newHandler({options:{inputSelector:'input[type="radio"]',
inputContainerSelector:"li"},init(){this.target.querySelectorAll(this.options.inputSelector).forEach(a=>{XF.on(a,"click",()=>{XF.MenuWatcher.closeAll();setTimeout(()=>this.update(),0)})});this.update()},update(){const a=this.options.inputContainerSelector;this.target.querySelectorAll(this.options.inputSelector).forEach(b=>{b.closest(a).classList.toggle("is-selected",b.checked)})}});XF.Element.register("permission-form","XF.PermissionForm");XF.Element.register("permission-choice","XF.PermissionChoice")})(window,
document);
