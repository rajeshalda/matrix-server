((e,f)=>{XF.TokenInput=XF.Element.newHandler({options:{tokens:[","],minLength:2,maxLength:0,maxTokens:Infinity,acUrl:"",listData:{}},tagify:null,loadTimer:null,abortController:null,defaultWhitelist:[],init(){let b=[];this.options.listData&&Object.keys(this.options.listData).forEach(a=>{b.push(this.options.listData[a])});this.defaultWhitelist=b;this.tagify=new Tagify(this.target,{whitelist:b,delimiters:this.options.tokens.join("|"),maxTags:this.options.maxTokens,originalInputValueFormat(a){return a.map(c=>
c.value).join(", ")},templates:{tag(a){const c=a.title||a.value;return`
							<tag title="${c}"
								contenteditable="false" spellcheck="false"
								class="${this.settings.classNames.tag} ${a.class||""}"
								tabindex="${this.settings.a11y.focusableTags?0:-1}"
								value="${c}" id="${c}" q="${a.q}">
								<x title="" class="${this.settings.classNames.tagX}" role="button" aria-label="remove tag"></x>
								<div>
									${a.iconHtml||""} <span class="${this.settings.classNames.tagText}">${c}</span>
								</div>
							</tag>
						`},dropdownItem(a){let c=a.mappedValue||a.value;var d=new RegExp("("+XF.regexQuote(XF.htmlspecialchars(a.q))+")","i");c=c.replace(d,"<strong>$1</strong>");d=a.iconHtml||"";return`
							<div ${this.getAttributes(a)}
                                class='${this.settings.classNames.dropdownItem} ${a.class?a.class:""}'
                                tabindex="0" role="option">
								${d?d+"&nbsp;":""}${c}
							</div>
						`}},dropdown:{enabled:b.length?0:this.options.minLength,maxItems:Infinity,sortby:"startsWith",highlightFirst:!0},texts:{empty:XF.phrase("tagify_empty"),exceed:XF.phrase("tagify_limit_reached"),pattern:XF.phrase("tagify_pattern_mismatch"),duplicate:XF.phrase("tagify_already_exists"),notAllowed:XF.phrase("tagify_not_allowed")}});this.target.disabled&&this.tagify.setDisabled(!0);this.tagify.on("blur",this.onBlur.bind(this));this.tagify.on("input",this.onInput.bind(this));this.tagify.on("dropdown:select",
()=>{XF.MenuWatcher.preventDocClick()});this.tagify.on("dropdown:hide",()=>{setTimeout(()=>{XF.MenuWatcher.allowDocClick()},0)})},onBlur(b){this.defaultWhitelist&&(this.tagify.whitelist=this.defaultWhitelist)},onInput(b){this.options.acUrl&&(this.loadTimer&&clearTimeout(this.loadTimer),this.loadTimer=setTimeout(this.load.bind(this,b.detail.value),200))},load(b){this.loadTimer&&clearTimeout(this.loadTimer);""===b||b.length<this.options.minLength||(this.abortController&&(this.abortController.abort(),
this.abortController=null),this.tagify.loading(!0),{abortController:b}=XF.ajaxAbortable("get",this.options.acUrl,{q:b},this.showResults.bind(this)),b&&(this.abortController=b))},showResults({results:b}){this.tagify.whitelist=[];this.tagify.loading(!1);this.abortController&&(this.abortController=null);b=this.prepareResults(b);this.tagify.whitelist.push(...b);this.tagify.dropdown.show.call(this.tagify,"")},prepareResults(b){return b?b.map(a=>({value:a.text,id:a.id,q:a.q,iconHtml:a.iconHtml})):[]}});
XF.Element.register("token-input","XF.TokenInput")})(window,document);
