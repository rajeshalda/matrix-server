((e,f)=>{XF.StylePropertiesUpdate=XF.Element.newHandler({init(){XF.on(this.target,"ajax-submit:response",this.ajaxSubmitResponse.bind(this))},ajaxSubmitResponse({data:a}){({properties:a}=a);if(a)for(const [b,d]of Object.entries(a))this.updateProperty(b,d)},updateProperty(a,b){const d=this.target.querySelector(`.js-property--${a}`);if(d){var c=d.querySelector('input[name="properties_revert[]"]');c&&c.checked&&(c.checked=!1,XF.trigger(c,"click"));if(c=d.querySelector("span.formRow-hint--customState"))c.classList.remove("cssCustomHighlight--custom",
"cssCustomHighlight--inherited","cssCustomHighlight--added"),c.classList.add(`cssCustomHighlight--${b.customizationState}`);this.updatePropertyValues(d,a,b.value)}},updatePropertyValues(a,b,d){a=a.querySelectorAll(`[name^="properties[${b}]"]`);b=new RegExp(`^properties\\[${b}\\]`);for(const c of a.values())a=c.name.replace(b,"").replace(/^\[/,"").replace(/\]$/,""),this.setInputValue(c,a?d[a]:d)},setInputValue(a,b){a instanceof HTMLInputElement&&["radio","checkbox"].includes(a.type)?a.checked=String(b)===
a.value:a.value=void 0!==b?b:"";XF.trigger(a,"input")}});XF.Element.register("style-properties-update","XF.StylePropertiesUpdate")})(window,document);
