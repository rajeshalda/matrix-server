((r,n)=>{XF.AttachmentManager=XF.Element.newHandler({options:{uploadButton:".js-attachmentUpload",manageUrl:null,container:".js-attachmentUploads",filesContainer:".js-attachmentFiles",fileRow:".js-attachmentFile",insertMultiRow:".js-attachmentInsertMultiRow",insertRow:".js-attachmentInsert",selectToggleButton:".js-attachmentSelect",selectActionButton:".js-attachmentSelectAction",actionButton:".js-attachmentAction",uploadTemplate:".js-attachmentUploadTemplate",templateProgress:".js-attachmentProgress",
templateError:".js-attachmentError",templateThumb:".js-attachmentThumb",templateView:".js-attachmentView",allowDrop:!1,resizeImages:!0,maxImageWidth:null,maxImageHeight:null,checkVideoSize:!0},container:null,filesContainer:null,template:null,form:null,legacyMode:!1,maxImageWidth:null,maxImageHeight:null,supportsVideoAudioUploads:null,manageUrl:null,flow:null,fileMap:{},exifMap:{},isUploading:!1,lastScroll:0,editor:null,init(){var a=this.options;const b=this.target;if(r.Flow){var c=b.querySelectorAll(a.uploadButton);
if(this.options.manageUrl)this.manageUrl=this.options.manageUrl;else{if(!c.length){console.error("No manage URL specified and no uploaders available.");return}const d=c[0];this.manageUrl=d.dataset.uploadHref||d.getAttribute("href")}this.options.maxImageWidth||this.options.maxImageHeight?(this.maxImageWidth=this.options.maxImageWidth,this.maxImageHeight=this.options.maxImageHeight):(this.maxImageWidth=XF.config.uploadMaxWidth,this.maxImageHeight=XF.config.uploadMaxHeight);this.container=b.querySelector(a.container);
this.filesContainer=b.querySelector(a.filesContainer);this.container?(XF.onDelegated(this.container,"click",a.actionButton,this.actionButtonClick.bind(this)),XF.onDelegated(this.container,"click",'input[type="checkbox"]',this.checkboxClick.bind(this)),XF.onDelegated(this.container,"click",a.selectToggleButton,this.selectToggleClick.bind(this)),XF.onDelegated(this.container,"click",a.selectActionButton,this.selectActionClick.bind(this))):(this.legacyMode=!0,XF.onDelegated(this.filesContainer,"click",
a.actionButton,this.actionButtonClick.bind(this)));(this.template=b.querySelector(a.uploadTemplate).innerHTML)||console.error("No attached file template found.");if(a=this.setupFlow()){if(this.flow=a,this.setupUploadButtons(c,a),this.options.allowDrop&&a.assignDrop([b]),setTimeout(()=>{(this.editor=XF.getEditorInContainer(this.target,"[data-attachment-target=false]"))||this.removeInsertButtons(this.container);this.toggleInsertMultiRow()},50),this.form=this.target.closest("form"))XF.on(this.form,"ajax-submit:before",
d=>{this.isUploading&&!confirm(XF.phrase("files_being_uploaded_are_you_sure"))&&(d.preventSubmit=!0)}),XF.on(this.form,"attachment-manager:reset",this.resetAttachments.bind(this))}else console.error("No flow uploader support")}else console.error("flow.js must be loaded")},setupFlow(){var a=this.getFlowOptions();a=new Flow(a);if(!a.support)return null;a.on("fileAdded",this.fileAdded.bind(this));a.on("filesSubmitted",this.filesSubmitted.bind(this));a.on("fileProgress",this.uploadProgress.bind(this));
a.on("fileSuccess",this.uploadSuccess.bind(this));a.on("fileError",this.uploadError.bind(this));return a},getFlowOptions(){return{target:this.manageUrl,allowDuplicateUploads:!0,fileParameterName:"upload",query:this.uploadQueryParams.bind(this),simultaneousUploads:1,testChunks:!1,progressCallbacksInterval:100,chunkSize:4294967296,readFileFn(a,b,c,d,e){let f="slice";a.file.slice?f="slice":a.file.mozSlice?f="mozSlice":a.file.webkitSlice&&(f="webkitSlice");d||(d="");e.readFinished(a.file[f](b,c,d))}}},
setupUploadButtons(a,b){a.forEach(c=>{var d=c.dataset.accept||"",e=XF.createElementFromString('<span class="js-attachButton"></span>');c.parentNode.insertBefore(e,c.nextSibling);e.appendChild(c);"."==d&&(d="");XF.on(c,"click",f=>f.preventDefault());b.assignBrowse(e,!1,!1,{accept:d});if(null===this.supportsVideoAudioUploads){c=XF.config.allowedVideoExtensions;const f=XF.config.allowedAudioExtensions;d=d.split(",");for(const g in d){const h=d[g].substr(1);if(c.includes(h)||f.includes(h)){this.supportsVideoAudioUploads=
!0;break}}}e=e.querySelector("input[type=file]");e.setAttribute("title",XF.htmlspecialchars(XF.phrase("attach")));e.style.overflow="hidden";e.style[XF.isRtl()?"right":"left"]="-1000px"})},fileAdded(a){var b=this.applyUploadTemplate({filename:a.name,uploading:!0});this.resizeProgress(b,0);XF.DataStore.set(b,"file",a);this.legacyMode?this.filesContainer.classList.add("is-active"):this.container.classList.add("is-active");this.filesContainer.appendChild(b);this.fileMap[a.uniqueIdentifier]=b;var c=this.filesContainer.closest('[data-xf-init="h-scroller"]');
if(c&&(c=XF.Element.getHandler(c,"h-scroller"))){const d=Date.now();this.lastScroll<d-500&&(this.lastScroll=d,c.scrollTo(XF.position(b).left-50))}this.target.querySelector(this.options.uploadButton).blur();b=this.target.querySelector(this.options.uploadButton).dataset.videoSize;if(this.options.checkVideoSize&&this.supportsVideoAudioUploads&&this.isVideoOrAudio(a)&&0<b&&a.size>b)return this.uploadError(a,this.addErrorToJson({},XF.phrase("file_too_large_to_upload"))),!1},isVideoOrAudio(a){var b=a.name.split(".");
a=XF.config.allowedVideoExtensions;const c=XF.config.allowedAudioExtensions;if(1===b.length||""===b[0]&&b.length)return!1;b=b.pop();return a.includes(b)||c.includes(b)},async filesSubmitted(a){await this.preProcessFiles(a);this.setUploading(!0);this.flow.upload()},async preProcessFiles(a){const b=async d=>{try{if(!1===await this.preProcessFile(d))throw Error("File failed pre-processing");}catch(e){this.flow.removeFile(d)}},c=[];for(const d of a)c.push(b(d));await Promise.allSettled(c)},async preProcessFile(a){if("undefined"!==
typeof ExifReader&&a.file.type.startsWith("image/")){try{var b=await ExifReader.load(a.file)}catch(c){b=null}if(b){const c={};for(const d of Object.values(b)){b=d.id;if(!b)continue;let e=d.value;Array.isArray(e)&&(e=1===e.length?e[0]:2===e.length?e.join("/"):d.description);c[b]=e}this.exifMap[a.uniqueIdentifier]=c}}if(this.options.resizeImages&&a.file.type.startsWith("image/"))try{const c=await XF.ImageTools.resize(a.file,this.maxImageWidth,this.maxImageHeight,"optimize"===XF.config.imageOptimization?
"image/webp":null);a.file=c;a.name=c.fileName||c.name;a.size=c.size;a.relativePath=c.relativePath||c.webkitRelativePath||c.name;a.bootstrap()}catch(c){}if(0<XF.config.uploadMaxFilesize&&a.size>XF.config.uploadMaxFilesize)return this.uploadError(a,this.addErrorToJson({},XF.phrase("uploaded_file_is_too_large_for_server_to_process"))),!1},uploadProgress(a){const b=this.fileMap[a.uniqueIdentifier];b&&(this.setUploading(!0),this.resizeProgress(b,a.progress()))},resizeProgress(a,b){b=Math.floor(100*b);
a=a.querySelector(this.options.templateProgress);let c=a.querySelector("i");c||(a.innerHTML="&nbsp;",c=XF.createElement("i",{},a));c.textContent=`${b}%`;c.style.width=`${b}%`},uploadSuccess(a,b,c){b=this.getObjectFromMessage(b);this.setUploading(!1);delete this.exifMap[a.uniqueIdentifier];b.status&&"error"==b.status?this.uploadError(a,b,c):b.attachment?this.insertUploadedRow(b.attachment,this.fileMap[a.uniqueIdentifier]):(b=this.addErrorToJson(b),this.uploadError(a,b,c))},setUploading(a){a=a?!0:!1;
a!==this.isUploading&&((this.isUploading=a)?XF.trigger(this.target,"attachment-manager:upload-start"):XF.trigger(this.target,"attachment-manager:upload-end"))},getObjectFromMessage(a){if(a instanceof Object)return a;try{return JSON.parse(a)}catch(b){return this.addErrorToJson({})}},addErrorToJson(a,b){a.status="error";a.errors=[null===b?XF.phrase("oops_we_ran_into_some_problems"):b];return a},insertUploadedRow(a,b){a=this.applyUploadTemplate(a);this.editor||this.removeInsertButtons(a);b?b.replaceWith(a):
(this.legacyMode?this.filesContainer.classList.add("is-active"):this.container.classList.add("is-active"),this.filesContainer.appendChild(a));XF.activate(a);XF.layoutChange();XF.trigger(a,XF.customEvent("attachment:row-inserted",{newHtml:a,attachmentManager:this}));this.toggleInsertMultiRow()},uploadError(a,b,c){b=this.getObjectFromMessage(b);this.setUploading(!1);delete this.exifMap[a.uniqueIdentifier];const d=this.fileMap[a.uniqueIdentifier];if(d&&b.errors){c=b.errors[0];if(!c)for(const e in b.errors){c=
b.errors[e];break}d.querySelector(this.options.templateProgress).remove();d.querySelector(this.options.templateError).textContent=c;d.classList.add("is-uploadError");delete this.fileMap[a.uniqueIdentifier];XF.DataStore.remove(d,"file")}else XF.defaultAjaxSuccessError(b,200,c.xhr),this.removeFileRow(d)},actionButtonClick(a){a.preventDefault();var b=a.target.closest(this.options.actionButton);a=b.getAttribute("data-action");const c=b.getAttribute("data-type");b=b.closest(this.options.fileRow);switch(a){case "thumbnail":case "full":this.insertAttachment(b,
a,c);break;case "delete":this.deleteAttachment(b,c);break;case "cancel":this.cancelUpload(b)}},checkboxClick(){const a=this.filesContainer.querySelectorAll('input[type="checkbox"]:checked').length;n.querySelectorAll(this.options.selectActionButton).forEach(b=>b.disabled=a?!1:!0)},selectToggleClick(a){a.preventDefault();this.setSelectActionState(!this.container.classList.contains("is-selecting"));a.target.blur()},setSelectActionState(a){const b=this.container;b.classList.contains("is-selecting")!==
a&&(b.querySelectorAll(this.options.selectToggleButton).forEach(c=>{const d=c.getAttribute("data-toggle"),e=c.textContent;c.textContent=d;c.setAttribute("data-toggle",e)}),b.classList[a?"add":"remove"]("is-selecting"))},selectActionClick(a){a.preventDefault();const b=a.target.closest("button").getAttribute("data-action"),c=this.options.fileRow,d=this.options.actionButton,e=this.filesContainer.querySelectorAll(`${c} input[type="checkbox"]:checked`);e.forEach(f=>{f=f.closest(c).querySelectorAll(d);
for(const g of f)if(f=g.dataset.type,("video"===f||"audio"===f)&&"thumbnail"===b){if("full"===g.dataset.action){g.click();break}}else if(g.dataset.action===b){g.click();break}e.forEach(g=>g.checked=!1)});this.container.querySelector(this.options.insertMultiRow).querySelector('input[data-xf-init="check-all"]').checked=!1;this.setSelectActionState(!1)},insertAttachment(a,b,c){c=c||"image";const d=a.dataset.attachmentId;if(d&&this.editor){var e,f=null==(e=a.querySelector(this.options.templateThumb))?
void 0:e.getAttribute("src");a=a.querySelector(this.options.templateView).getAttribute("href");var g;e={id:d,img:f};if("video"==c||"audio"==c)b="full";if("full"==b)b=`[ATTACH=full]${d}[/ATTACH]`,"image"==c?g='<img src="{{img}}" data-attachment="full:{{id}}" alt="" />':"video"==c?g='<span contenteditable="false" draggable="true" class="fr-video fr-dvi fr-draggable fr-deletable"><video data-xf-init="video-init" data-attachment="full:{{id}}" src="{{img}}" controls></video></span>':"audio"==c&&(g='<span contenteditable="false" draggable="true" class="fr-audio fr-dvi fr-draggable fr-deletable"><audio data-attachment="full:{{id}}" src="{{img}}" controls></audio></span>&nbsp;'),
e.img=a;else{if(!f||"image"!==c)return;b=`[ATTACH]${d}[/ATTACH]`;g='<img src="{{img}}" data-attachment="thumb:{{id}}" alt="" />'}g=Mustache.render(g,e);XF.insertIntoEditor(this.target,g,b,"[data-attachment-target=false]")}},deleteAttachment(a,b){b=b||"image";const c=a.dataset.attachmentId;if(c){XF.ajax("post",this.manageUrl,{delete:c},f=>{f.delete&&this.removeFileRow(a)},{skipDefaultSuccess:!0});var d=new RegExp("^[a-z]+:"+c+"$","i"),e=new RegExp("\\[attach[^\\]]*\\]"+c+"\\[/attach\\]","gi");XF.modifyEditorContent(this.target,
f=>{f.ed.$el.find("[data-attachment]").filter(g=>d.test(g.getAttribute("data-attachment"))).each((g,h)=>{"image"===b||"file"===b?f.ed.image.remove(f.ed.$(h)):("video"===b||"audio"===b)&&h.parentNode.remove()})},f=>{let g=f.value;g=g.replace(e,"");f.value=g},"[data-attachment-target=false]")}},cancelUpload(a){const b=XF.DataStore.get(a,"file");a.dataset.attachmentId||b&&1==b.progress()||(this.flow.removeFile(b),this.flow.isUploading()||this.setUploading(!1),this.removeFileRow(a))},uploadQueryParams(a){const b=
{_xfToken:XF.config.csrf,_xfResponseType:"json",_xfWithData:1};void 0!==this.exifMap[a.uniqueIdentifier]&&(b._xfExif=JSON.stringify(this.exifMap[a.uniqueIdentifier]));return b},applyUploadTemplate(a){return XF.createElementFromString(Mustache.render(this.template,a).trim())},removeFileRow(a){a.remove();this.toggleInsertMultiRow();this.getFileRows().length||(this.legacyMode?this.filesContainer.classList.remove("is-active"):this.container.classList.remove("is-active"),XF.layoutChange())},removeInsertButtons(a){null==
a||a.querySelectorAll(`${this.options.insertRow}, ${this.options.insertMultiRow}`).forEach(b=>b.remove());XF.layoutChange()},toggleInsertMultiRow(){this.checkboxClick();let a=Array.from(this.filesContainer.querySelectorAll(this.options.actionButton)).filter(b=>!b.dataset.action||"delete"!==b.dataset.action).map(b=>b.closest(this.options.fileRow));if(this.container){let b=this.container.querySelector(this.options.insertMultiRow);b&&(1<a.length?b.classList.add("is-active"):b.classList.remove("is-active"))}XF.layoutChange()},
resetAttachments(){this.getFileRows().forEach(a=>this.removeFileRow(a))},getFileRows(){return this.filesContainer.querySelectorAll(this.options.fileRow)}});XF.AttachmentOnInsert=XF.Element.newHandler({options:{fileRow:".js-attachmentFile",href:null,linkData:null},loading:!1,init(){const a=this.target.closest(this.options.fileRow);a&&this.options.href||console.error("Cannot find inserted row or action to perform.");XF.on(a,"attachment:row-inserted",this.onAttachmentInsert.bind(this))},onAttachmentInsert(a,
b,c){this.loading||XF.ajax("post",this.options.href,this.options.linkData||{},this.onLoad.bind(this)).finally(()=>this.loading=!1)},onLoad(a){a.html&&XF.setupHtmlInsert(a.html,(b,c,d)=>{this.target.replaceWith(b);XF.Animate.fadeDown(b,{speed:XF.config.speed.xfast,complete(){d(!1,this.target);XF.layoutChange()}})})}});XF.ImageTools={getQuality(a){return XF.config.imageOptimizationQuality||.85},resize(a,b,c,d){return new Promise((e,f)=>{if(a.type.startsWith("image/"))if("image/gif"===a.type)e(a);else{d=
d||a.type;var g=n.createElement("img");g.onload=()=>{let h=g.width,k=g.height,p=!0;(!b||h<=b)&&(!c||k<=c)&&(p=!1);b&&h>b&&(k*=b/h,h=b);c&&k>c&&(h*=c/k,k=c);const l=n.createElement("canvas"),q=l.getContext("2d");null===q?f(Error("Failed to retrieve a valid drawing context.")):(l.width=h,l.height=k,q.drawImage(g,0,0,l.width,l.height),l.toBlob(m=>{null===m?f(Error("Failed to create blob from the canvas.")):(m=new File([m],a.name,{type:d,lastModified:a.lastModified}),!p&&m.size>=a.size?e(a):e(m))},d,
this.getQuality(a)),URL.revokeObjectURL(g.src))};g.src=URL.createObjectURL(a)}else f(Error("The file is not an image."))})}};XF.Element.register("attachment-manager","XF.AttachmentManager");XF.Element.register("attachment-on-insert","XF.AttachmentOnInsert")})(window,document);
